(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{405:function(n,s,a){"use strict";a.r(s);var t=a(6),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[n._v("#")]),n._v(" 什么是闭包?")]),n._v(" "),a("p",[n._v("我想每一位前端开发都应该听说过闭包，每当面试官问谈谈你对闭包的理解:通常我都是回复"),a("strong",[n._v("当函数 A 内部嵌套了函数 B，那么我们可以把 B 函数称为 A 函数的闭包")]),n._v("。当然这么说并没有错，这是闭包的表现我们是否有想过闭包的本质是什么？闭包的场景是什么？")]),n._v(" "),a("p",[n._v("带着以上的几个问题我们来对闭包一探究竟。\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/7/19/173662b69445eb6b?w=1298&h=717&f=png&s=34310",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"一切得从词法作用域开始说起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一切得从词法作用域开始说起"}},[n._v("#")]),n._v(" 一切得从词法作用域开始说起")]),n._v(" "),a("h3",{attrs:{id:"词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[n._v("#")]),n._v(" 词法作用域")]),n._v(" "),a("blockquote",[a("p",[n._v("词法（lexical）一词指的是，词法作用域根据源代码中声明变量的位置来确定该变量在何处可用。")])]),n._v(" "),a("h3",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[n._v("#")]),n._v(" 作用域链")]),n._v(" "),a("p",[n._v("当在函数中进行变量查找的时候，如果这个属性不存在，那么 js 解释器就会在父作用域中查找这个属性，如果父辈中也没有继续往祖辈中查找。像这样一层层在父作用域中查找的过程我们称之为作用域链。")]),n._v(" "),a("div",{staticClass:"language-! line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("当查找的属性在整个作用域链中不存在的话，那么在浏览器环境下一般会产生一个错误 `Uncaught ReferenceError: xxx is not defined`\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("来看一个 MDN 上的例子:")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('function init() {\n    var name = "Mozilla"; // name 是一个被 init 创建的局部变量\n    function displayName() { // displayName() 是内部函数，一个闭包\n        alert(name); // 使用了父函数中声明的变量\n    }\n    displayName();\n}\ninit();\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[n._v("我们分析下函数运行时作用域是如何调起的:")]),n._v(" "),a("ol",[a("li",[n._v("当运行"),a("code",[n._v("init()")]),n._v("的时候,在函数内部定义了一个局部变量"),a("code",[n._v("name")]),n._v("，声明了一个函数"),a("code",[n._v("displayName")]),n._v("。这时候 js 会调起一个"),a("code",[n._v("init()")]),n._v("函数的作用域。")]),n._v(" "),a("li",[n._v("当运行"),a("code",[n._v("displayName()")]),n._v("的时候，js 会调起"),a("code",[n._v("displayName")]),n._v("的作用域，当执行到"),a("code",[n._v("alert(name)")]),n._v("由于当前函数作用域中并没有找到变量"),a("code",[n._v("name")]),n._v("于是作用域环境就向外部执行环境函数"),a("code",[n._v("init")]),n._v("中查找,这种查找过程就形成了"),a("strong",[n._v("作用域链")]),n._v("，找到"),a("code",[n._v("name")]),n._v("后停止查找执行"),a("code",[n._v("alert")]),n._v("。")])]),n._v(" "),a("p",[n._v("根据以上的例子我们知道了函数运行时会调起当前作用域试想一下如果在"),a("code",[n._v("displayName")]),n._v("的内部定义了变量"),a("code",[n._v("name")]),n._v("那么"),a("code",[n._v("alert")]),n._v("的到底是哪个"),a("strong",[n._v("name")]),n._v("，这里应该能猜到当然是内部的"),a("code",[n._v("name")]),n._v("。因为在作用域中查找是需要时间的，能在当前作用域中找到就会屏蔽掉外部作用域中的同名变量这也符合一般规律。")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/7/23/1737aaba0ade70e1?w=1153&h=932&f=png&s=50207",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"不得不提的-javascript-内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不得不提的-javascript-内存管理"}},[n._v("#")]),n._v(" 不得不提的 JavaScript 内存管理")]),n._v(" "),a("p",[n._v("理解了作用域的概念之后我们还要了解"),a("strong",[n._v("JavaScript")]),n._v("中内存的管理。\n这里有两个概念一个是"),a("strong",[n._v("分配内存")]),n._v("另一个就是"),a("strong",[n._v("回收内存")]),n._v("。")]),n._v(" "),a("h3",{attrs:{id:"内存分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存分配"}},[n._v("#")]),n._v(" 内存分配")]),n._v(" "),a("blockquote",[a("p",[n._v("为了不让程序员费心分配内存，"),a("code",[n._v("JavaScript")]),n._v(" 在定义变量时就完成了内存分配。")])]),n._v(" "),a("h3",{attrs:{id:"内存回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存回收"}},[n._v("#")]),n._v(" 内存回收")]),n._v(" "),a("blockquote",[a("p",[a("code",[n._v("JavaScript")]),n._v(" 同样嵌入了“垃圾回收器”，它的主要工作是跟踪内存的分配和使用，以便当分配的内存不再使用时，自动释放它。这只能是一个近似的过程，因为要知道是否仍然需要某块内存是无法判定的（无法通过某种算法解决）。")])]),n._v(" "),a("p",[n._v("那么"),a("strong",[n._v("闭包")]),n._v("和"),a("strong",[n._v("内存回收")]),n._v("之间有什么联系呢?\n废话不多说直接开始看代码:")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function a(){\n    var n = 0\n    var add = function(){\n        return n += 1\n    }\n    return add\n}\nvar c = a()\nc() // n = 1\nc() // n = 2\nc() // n = 3\n.....\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("p",[n._v("可以看到函数 "),a("code",[n._v("a")]),n._v(" 返回一个名为 "),a("code",[n._v("add")]),n._v("的函数 并在 "),a("code",[n._v("add")]),n._v(" 的内部引用了函数 "),a("code",[n._v("a")]),n._v(" 中定义的变量 "),a("code",[n._v("n")]),n._v("，当我们把 "),a("code",[n._v("a")]),n._v(" 函数的运行结果保存在变量 "),a("code",[n._v("c")]),n._v(" 中第一次运行"),a("code",[n._v("c()")]),n._v("返回 "),a("strong",[n._v("1")]),n._v(" 第二次运行"),a("code",[n._v("c()")]),n._v("返回 "),a("strong",[n._v("2")]),n._v(" 以此累加。\n函数每次返回的 "),a("code",[n._v("n")]),n._v(" 都是在上次运算的基础上进行。")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/7/21/173708f06ae1baaa?w=643&h=602&f=png&s=65657",alt:""}}),n._v("\n当程序执行到代码"),a("code",[n._v("var c = a()")]),n._v("的时候：")]),n._v(" "),a("ol",[a("li",[n._v("调用"),a("code",[n._v("a()")]),n._v(" 返回 "),a("code",[n._v("add")]),n._v(" 函数的引用。")]),n._v(" "),a("li",[n._v("在全局作用域中定义了变量"),a("code",[n._v("c")]),n._v("保存了"),a("code",[n._v("add")]),n._v("函数的引用。")])]),n._v(" "),a("p",[n._v("当程序执行到代码"),a("code",[n._v("c()")]),n._v("的时候:")]),n._v(" "),a("ol",[a("li",[a("code",[n._v("add")]),n._v(" 函数被执行，"),a("code",[n._v("n += 1")]),n._v("在当前函数的中试着寻找变量"),a("code",[n._v("n")]),n._v(",显然是没有的，于是执行环境只能向父作用域中查找。")]),n._v(" "),a("li",[n._v("然后"),a("code",[n._v("js")]),n._v("就沿着"),a("strong",[n._v("作用域链")]),n._v("在"),a("code",[n._v("a")]),n._v("函数中继续查找变量"),a("code",[n._v("n")]),n._v("。")]),n._v(" "),a("li",[n._v("终于在"),a("code",[n._v("a")]),n._v("函数中发现定义了变量"),a("code",[n._v("n = 0")]),n._v("找到变量"),a("code",[n._v("n")]),n._v("并对其进行 "),a("code",[n._v("+1")]),n._v(" 计算并返回 "),a("code",[n._v("n += 1")]),n._v(" 的结果。")])]),n._v(" "),a("p",[n._v("总结:\n变量"),a("code",[n._v("c")]),n._v("引用了"),a("code",[n._v("add")]),n._v("函数而"),a("code",[n._v("add")]),n._v("函数引用了变量"),a("code",[n._v("n")]),n._v("，那么变量"),a("code",[n._v("c")]),n._v("间接地通过了"),a("code",[n._v("add")]),n._v("函数完成了对变量"),a("code",[n._v("n")]),n._v("引用。所以就导致了 js 引擎一直没有对变量"),a("code",[n._v("n")]),n._v("进行"),a("strong",[n._v("内存回收")]),n._v("，因此我们每次运行"),a("code",[n._v("c()")]),n._v("都会基与内存中变量"),a("code",[n._v("n")]),n._v("的值，故而产生了"),a("strong",[n._v("闭包这种现象")]),n._v("，看到这里是不是有种恍然大悟的感觉。")]),n._v(" "),a("p",[n._v("这么看来闭包确实挺朴实无华的，学习编程往往都是由一个简单的示例到复杂的案例，看了闭包的外形，且掌握了闭包的本质，那么接下来我想用几个实际开发中碰到的问题用闭包的方式去解决。")]),n._v(" "),a("h2",{attrs:{id:"闭包的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的应用"}},[n._v("#")]),n._v(" 闭包的应用")]),n._v(" "),a("h3",{attrs:{id:"购物车商品计数器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#购物车商品计数器"}},[n._v("#")]),n._v(" 购物车商品计数器")]),n._v(" "),a("p",[n._v("需求:")]),n._v(" "),a("ol",[a("li",[n._v("可以对商品数量进行增加、减少、访问。")]),n._v(" "),a("li",[n._v("一个页面下可以存在多个计数器。")]),n._v(" "),a("li",[n._v("多个计数器分别只对当前商品起作用，即多个计数器之间状态互不干扰。")]),n._v(" "),a("li",[n._v("除了计数器本身提供的方法之外，无法通过别的手段访问和修改计数器中的状态。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function counter() {\n  var num = 0;\n  let obj = {\n    add: function add() {\n      return (num += 1);\n    },\n    reduce: function add() {\n      return (num -= 1);\n    },\n    get: function() {\n      return num\n    }\n  };\n  return obj;\n}\nlet c1 = counter()\nc1.add()\nlet c2 = counter()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("h3",{attrs:{id:"用闭包实现防抖-debounce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用闭包实现防抖-debounce"}},[n._v("#")]),n._v(" 用闭包实现防抖(debounce)")]),n._v(" "),a("blockquote",[a("p",[n._v("在事件被触发 n 秒后再执行回调，如果在这 n 秒内又被触发，则重新计时。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function debounce(fn,wait){\n    let timer\n    return function(){\n        if(timer){\n            clearTimeout(timer)\n        }\n        timer = setTimeout(()=>{\n            fn.apply(this,arguments)\n        },wait)\n    }\n}\n\nfunction a(a){\n    console.log('a:',a)\n}\n\nvar b = debounce(a,1000) // 在一秒钟之内只能触发一次，如果再次触发则重新计时\n\nwindow.addEventListener('scroll',function(){b('hello')})\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br")])]),a("h4",{attrs:{id:"防抖的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖的应用场景"}},[n._v("#")]),n._v(" 防抖的应用场景")]),n._v(" "),a("ul",[a("li",[n._v("输入框联想查询")]),n._v(" "),a("li",[n._v("阻止按钮在规定时间内被多次点击")]),n._v(" "),a("li",[n._v("浏览器窗口大小调整")])]),n._v(" "),a("h3",{attrs:{id:"用闭包实现节流-throttling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用闭包实现节流-throttling"}},[n._v("#")]),n._v(" 用闭包实现节流(throttling)")]),n._v(" "),a("blockquote",[a("p",[n._v("规定在一个单位时间内，只能触发一次函数。如果这个单位时间内触发多次函数，只有一次生效。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function throttling(fn,wait){\n    let oldTime = 0\n    return function (){\n        let nowTime = Date.now()\n        if(nowTime-oldTime > wait){\n            oldTime = Date.now()\n            fn.apply(this,arguments)\n        }\n    }\n}\n\nfunction a(a){\n    console.log('a:', a)\n}\n\nvar b = throttling(a,1000)\n\nwindow.addEventListener('resize',function(){\n    b('hello')\n\n},false)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br")])]),a("h4",{attrs:{id:"节流的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流的应用场景"}},[n._v("#")]),n._v(" 节流的应用场景")]),n._v(" "),a("ul",[a("li",[n._v("限制接口调用的频率")]),n._v(" "),a("li",[n._v("对滚动到底部或者下拉刷新事件的次数做限制")]),n._v(" "),a("li",[n._v("高频率的按钮点击等")])]),n._v(" "),a("h2",{attrs:{id:"后话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后话"}},[n._v("#")]),n._v(" 后话")]),n._v(" "),a("p",[n._v("我们用了两个例子了解了"),a("strong",[n._v("JavaScript")]),n._v("词法"),a("strong",[n._v("作用域")]),n._v("和"),a("strong",[n._v("内存管理")]),n._v("。在从闭包外表，了解到闭包本质就是"),a("strong",[n._v("内部的作用域")]),n._v("被外部引用导致了"),a("strong",[n._v("内存得不到释放")]),n._v("于是产生了"),a("strong",[n._v("闭包")]),n._v("。最后用闭包的方式完成了"),a("strong",[n._v("节流防抖")]),n._v("函数。")]),n._v(" "),a("p",[n._v("以上就是我所理解的闭包，其中可能因为本人学艺不精导致内容不可避免地出现一些错误，希望大佬能帮忙指正。")]),n._v(" "),a("p",[n._v("如果这篇文章对您理解闭包有所帮助的话别忘了点 👍 哦，别下次一定了就这次吧!")]),n._v(" "),a("p",[n._v("最后，感谢您阅读这篇文章，有任何问题或反馈请给我留言。")])])}),[],!1,null,null,null);s.default=e.exports}}]);