(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{499:function(t,a,s){"use strict";s.r(a);var e=s(9),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是选择排序"}},[t._v("#")]),t._v(" 什么是选择排序？")]),t._v(" "),s("p",[t._v("选择排序是一种简单直观的排序算法，无论什么数据进去都是O(n2) 的时间复杂度。所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。通俗来说就是你们中间谁最小谁就出列，站到队列的最后边，然后继续对着剩余的无序数组说你们中间谁最小谁就出列，站到队列的最后边，一直到最后一个，继续站到最后边，这样数组就有了顺序，从小到大。")]),t._v(" "),s("h2",{attrs:{id:"算法步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法步骤"}},[t._v("#")]),t._v(" 算法步骤")])])}),[],!1,null,null,null);a.default=r.exports}}]);